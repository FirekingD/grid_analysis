library(dplyr)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ade4")
install.packages("factoextra")
install.packages("geojsonsf")
install.packages("sf")
install.packages("lattice")
install.packages("GGally")
install.packages("readxl")
setwd("D:/dem/grid_analysis")
conso_elec<- read.csv("./data/consommation_annuelle_residentielle_adresse_paris.csv",sep=";")
prod_elec<- read.csv("./data/production-electrique-par-filiere-a-la-maille-region.csv", sep=";")
iris_paris<-st_read(dsn="data",layer="iris_paris")
library(dplyr)
library(ggplot2)
library(ade4)
library(factoextra)
library(geojsonsf)
library(sf)
library(lattice)
library(GGally)
library(readxl)
setwd("D:/dem/grid_analysis")
conso_elec<- read.csv("./data/consommation_annuelle_residentielle_adresse_paris.csv",sep=";")
prod_elec<- read.csv("./data/production-electrique-par-filiere-a-la-maille-region.csv", sep=";")
iris_paris<-st_read(dsn="data",layer="iris_paris")
plot(iris_paris)
iris_paris_joined_conso<-merge(iris_paris,conso_elec,by.x="CODE_IRIS",by.y="Code.IRIS",type="full")
#plot(iris_paris_joined_conso$geometry)
c2018=filter(iris_paris_joined_conso,Année=="2018")
c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2018_agr=aggregate(c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh., list(c2018$CODE_IRIS), sum)
names(c2018_agr)[1] <- "code_iris" ;names(c2018_agr)[2] <- "conso_annuelle_totale_iris"
c2019=filter(iris_paris_joined_conso,Année=="2019")
c2019$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2019$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2019_agr=aggregate(c2019$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh., list(c2019$CODE_IRIS), sum)
names(c2019_agr)[1] <- "code_iris" ;names(c2019_agr)[2] <- "conso_annuelle_totale_iris"
c2020=filter(iris_paris_joined_conso,Année=="2020")
c2020$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2020$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2020_agr=aggregate(c2020$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh., list(c2020$CODE_IRIS), sum)
names(c2020_agr)[1] <- "code_iris" ;names(c2020_agr)[2] <- "conso_annuelle_totale_iris"
View(c2020_agr)
View(c2020_agr)
View(c2019_agr)
View(c2019_agr)
View(c2018_agr)
View(c2018_agr)
View(conso_elec)
View(conso_elec)
View(iris_paris_joined_conso)
View(iris_paris_joined_conso)
type(c2018$Nombre.de.logements)
class(c2018$Nombre.de.logements)
class(c(1,2))
test_vec<-c(c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,c2018$Nombre.de.logements)
class(test_vec)
test_agr<-aggregate(test_vec, list(c2018$CODE_IRIS), sum)
length( c2018$Nombre.de.logements)
length( c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.)
length(c2018$CODE_IRIS)
test_agr<-aggregate(data.frame(test_vec), list(c2018$CODE_IRIS), sum)
test_agr<-aggregate(c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,c2018$Nombre.de.logements, list(c2018$CODE_IRIS), sum)
names(c2018)
c2018["Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.","Nombre.de.logements"]
test_agr<-aggregate(c2018["Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.","Nombre.de.logements"], list(c2018$CODE_IRIS), sum)
names(c2018)
c2018[,1]
c2018[,2]
iden<-c("Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.","Nombre.de.logements")
iden
c2018[iden]
test_agr<-aggregate(c2018[iden], list(c2018$CODE_IRIS), sum)
View(test_agr)
View(test_agr)
iden<-c("Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.","Nombre.de.logements")
#plot(iris_paris_joined_conso$geometry)
c2018=filter(iris_paris_joined_conso,Année=="2018")
c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
View(c2018_agr)
View(c2018_agr)
test_agr<-aggregate(c2018[iden], list(c2018$CODE_IRIS), sum)
c2018_agr=aggregate(c2018[iden], list(c2018$CODE_IRIS), sum)
View(test_agr)
View(test_agr)
View(c2018_agr)
View(c2018_agr)
names(c2018_agr)[1] <- "code_iris" ;names(c2018_agr)[2] <- "conso_annuelle_totale_iris" ; names(c2018_agr)[3]<-"nb_logements_totale_iris"
View(c2018_agr)
View(c2018_agr)
c2019_agr=aggregate(c2019[iden], list(c2019$CODE_IRIS), sum)
names(c2019_agr)[1] <- "code_iris" ;names(c2019_agr)[2] <- "conso_annuelle_totale_iris" ; names(c2019_agr)[3]<-"nb_logements_totale_iris"
View(c2019_agr)
View(c2019_agr)
c2020_agr=aggregate(c2020[iden], list(c2020$CODE_IRIS), sum)
names(c2020_agr)[1] <- "code_iris" ;names(c2020_agr)[2] <- "conso_annuelle_totale_iris" ; names(c2020_agr)[3]<-"nb_logements_totale_iris"
View(c2020_agr)
View(c2020_agr)
library(dplyr)
library(ggplot2)
library(ade4)
library(factoextra)
#install.packages("lattice")
#install.packages("geojsonsf")
#install.packages("sf")
#install.packages("readxl")
#install.packages("xlsx")
#library(xlsx)
library(geojsonsf)
library(sf)
library(lattice)
library(GGally)
library(readxl)
setwd("D:/dem/grid_analysis")
conso_elec<- read.csv("./data/consommation_annuelle_residentielle_adresse_paris.csv",sep=";")
prod_elec<- read.csv("./data/production-electrique-par-filiere-a-la-maille-region.csv", sep=";")
iris_paris<-st_read(dsn="data",layer="iris_paris")
#plot(iris_paris)
iris_paris_joined_conso<-merge(iris_paris,conso_elec,by.x="CODE_IRIS",by.y="Code.IRIS",type="full")
iden<-c("Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.","Consommation.annuelle.totale.de.l.adresse..MWh.","Nombre.de.logements")
#plot(iris_paris_joined_conso$geometry)
c2018=filter(iris_paris_joined_conso,Année=="2018")
c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2018$Consommation.annuelle.totale.de.l.adresse..MWh.= as.numeric(sub(",",".",c2018$Consommation.annuelle.totale.de.l.adresse..MWh.,fixed=TRUE))
c2018_agr=aggregate(c2018[iden], list(c2018$CODE_IRIS), sum)
names(c2018_agr)[1] <- "code_iris" ;names(c2018_agr)[2] <- "sum_conso_annuelle_moyenne_iris" ; names(c2018_agr)[3]<-"sum_conso_annuelle_totale_iris";names(c2018_agr)[4]<-"nb_logements_totale_iris"
c2019=filter(iris_paris_joined_conso,Année=="2019")
c2019$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2019$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2019$Consommation.annuelle.totale.de.l.adresse..MWh.= as.numeric(sub(",",".",c2019$Consommation.annuelle.totale.de.l.adresse..MWh.,fixed=TRUE))
c2019_agr=aggregate(c2019[iden], list(c2019$CODE_IRIS), sum)
names(c2019_agr)[1] <- "code_iris" ;names(c2019_agr)[2] <- "sum_conso_annuelle_moyenne_iris" ;names(c2019_agr)[3]<-"sum_conso_annuelle_totale_iris"; names(c2019_agr)[4]<-"nb_logements_totale_iris"
c2020=filter(iris_paris_joined_conso,Année=="2020")
c2020$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2020$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2020$Consommation.annuelle.totale.de.l.adresse..MWh.= as.numeric(sub(",",".",c2020$Consommation.annuelle.totale.de.l.adresse..MWh.,fixed=TRUE))
c2020_agr=aggregate(c2020[iden], list(c2020$CODE_IRIS), sum)
names(c2020_agr)[1] <- "code_iris" ;names(c2020_agr)[2] <- "sum_conso_annuelle_moyenne_iris" ;names(c2020_agr)[3]<-"sum_conso_annuelle_totale_iris"; names(c2020_agr)[4]<-"nb_logements_totale_iris"
#ggplot()+geom_polygon(data=iris_paris_joined_conso2018,aes(long,lat,fill=Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.))
ggplot() +
geom_sf(data = iris_paris_joined_conso2018, aes(fill = ))
library(dplyr)
library(ggplot2)
library(ade4)
library(factoextra)
#install.packages("lattice")
#install.packages("geojsonsf")
#install.packages("sf")
#install.packages("readxl")
#install.packages("xlsx")
#library(xlsx)
library(geojsonsf)
library(sf)
library(lattice)
library(GGally)
library(readxl)
setwd("D:/dem/grid_analysis")
conso_elec<- read.csv("./data/consommation_annuelle_residentielle_adresse_paris.csv",sep=";")
prod_elec<- read.csv("./data/production-electrique-par-filiere-a-la-maille-region.csv", sep=";")
iris_paris<-st_read(dsn="data",layer="iris_paris")
#plot(iris_paris)
iris_paris_joined_conso<-merge(iris_paris,conso_elec,by.x="CODE_IRIS",by.y="Code.IRIS",type="full")
iden<-c("Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.","Consommation.annuelle.totale.de.l.adresse..MWh.","Nombre.de.logements")
#plot(iris_paris_joined_conso$geometry)
c2018=filter(iris_paris_joined_conso,Année=="2018")
c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2018$Consommation.annuelle.totale.de.l.adresse..MWh.= as.numeric(sub(",",".",c2018$Consommation.annuelle.totale.de.l.adresse..MWh.,fixed=TRUE))
c2018_agr=aggregate(c2018[iden], list(c2018$CODE_IRIS), sum)
names(c2018_agr)[1] <- "code_iris" ;names(c2018_agr)[2] <- "sum_conso_annuelle_moyenne_iris" ; names(c2018_agr)[3]<-"sum_conso_annuelle_totale_iris";names(c2018_agr)[4]<-"nb_logements_totale_iris"
c2019=filter(iris_paris_joined_conso,Année=="2019")
c2019$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2019$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2019$Consommation.annuelle.totale.de.l.adresse..MWh.= as.numeric(sub(",",".",c2019$Consommation.annuelle.totale.de.l.adresse..MWh.,fixed=TRUE))
c2019_agr=aggregate(c2019[iden], list(c2019$CODE_IRIS), sum)
names(c2019_agr)[1] <- "code_iris" ;names(c2019_agr)[2] <- "sum_conso_annuelle_moyenne_iris" ;names(c2019_agr)[3]<-"sum_conso_annuelle_totale_iris"; names(c2019_agr)[4]<-"nb_logements_totale_iris"
c2020=filter(iris_paris_joined_conso,Année=="2020")
c2020$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2020$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2020$Consommation.annuelle.totale.de.l.adresse..MWh.= as.numeric(sub(",",".",c2020$Consommation.annuelle.totale.de.l.adresse..MWh.,fixed=TRUE))
c2020_agr=aggregate(c2020[iden], list(c2020$CODE_IRIS), sum)
names(c2020_agr)[1] <- "code_iris" ;names(c2020_agr)[2] <- "sum_conso_annuelle_moyenne_iris" ;names(c2020_agr)[3]<-"sum_conso_annuelle_totale_iris"; names(c2020_agr)[4]<-"nb_logements_totale_iris"
#ggplot()+geom_polygon(data=iris_paris_joined_conso2018,aes(long,lat,fill=Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.))
ggplot() +
geom_sf(data = iris_paris_joined_conso2018, aes(fill = ))
library(dplyr)
library(ggplot2)
library(ade4)
library(factoextra)
#install.packages("lattice")
#install.packages("geojsonsf")
#install.packages("sf")
#install.packages("readxl")
#install.packages("xlsx")
#library(xlsx)
library(geojsonsf)
library(sf)
library(lattice)
library(GGally)
library(readxl)
setwd("D:/dem/grid_analysis")
conso_elec<- read.csv("./data/consommation_annuelle_residentielle_adresse_paris.csv",sep=";")
prod_elec<- read.csv("./data/production-electrique-par-filiere-a-la-maille-region.csv", sep=";")
iris_paris<-st_read(dsn="data",layer="iris_paris")
#plot(iris_paris)
iris_paris_joined_conso<-merge(iris_paris,conso_elec,by.x="CODE_IRIS",by.y="Code.IRIS",type="full")
iden<-c("Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.","Consommation.annuelle.totale.de.l.adresse..MWh.","Nombre.de.logements")
#plot(iris_paris_joined_conso$geometry)
c2018=filter(iris_paris_joined_conso,Année=="2018")
c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2018$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2018$Consommation.annuelle.totale.de.l.adresse..MWh.= as.numeric(sub(",",".",c2018$Consommation.annuelle.totale.de.l.adresse..MWh.,fixed=TRUE))
c2018_agr=aggregate(c2018[iden], list(c2018$CODE_IRIS), sum)
names(c2018_agr)[1] <- "code_iris" ;names(c2018_agr)[2] <- "sum_conso_annuelle_moyenne_iris" ; names(c2018_agr)[3]<-"sum_conso_annuelle_totale_iris";names(c2018_agr)[4]<-"nb_logements_totale_iris"
c2019=filter(iris_paris_joined_conso,Année=="2019")
c2019$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2019$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2019$Consommation.annuelle.totale.de.l.adresse..MWh.= as.numeric(sub(",",".",c2019$Consommation.annuelle.totale.de.l.adresse..MWh.,fixed=TRUE))
c2019_agr=aggregate(c2019[iden], list(c2019$CODE_IRIS), sum)
names(c2019_agr)[1] <- "code_iris" ;names(c2019_agr)[2] <- "sum_conso_annuelle_moyenne_iris" ;names(c2019_agr)[3]<-"sum_conso_annuelle_totale_iris"; names(c2019_agr)[4]<-"nb_logements_totale_iris"
c2020=filter(iris_paris_joined_conso,Année=="2020")
c2020$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.= as.numeric(sub(",",".",c2020$Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.,fixed=TRUE))
c2020$Consommation.annuelle.totale.de.l.adresse..MWh.= as.numeric(sub(",",".",c2020$Consommation.annuelle.totale.de.l.adresse..MWh.,fixed=TRUE))
c2020_agr=aggregate(c2020[iden], list(c2020$CODE_IRIS), sum)
names(c2020_agr)[1] <- "code_iris" ;names(c2020_agr)[2] <- "sum_conso_annuelle_moyenne_iris" ;names(c2020_agr)[3]<-"sum_conso_annuelle_totale_iris"; names(c2020_agr)[4]<-"nb_logements_totale_iris"
#ggplot()+geom_polygon(data=iris_paris_joined_conso2018,aes(long,lat,fill=Consommation.annuelle.moyenne.par.logement.de.l.adresse..MWh.))
ggplot() +
geom_sf(data = iris_paris_joined_conso2018, aes(fill = ))
View(c2018_agr)
View(c2018_agr)
View(c2019_agr)
View(c2019_agr)
View(c2020_agr)
View(c2020_agr)
View(iris_paris_joined_conso)
View(iris_paris_joined_conso)
c2018$Consommation.annuelle.totale.de.l.adresse..MWh.
plot(c2018_agr)
install.packages("sqldf")
library(sqldf)
sqldf('SELECT code_iris FROM c2020_agr EXCEPT SELECT code_iris FROM c2018_agr')
col2018<-c2018_agr$code_iris
col2018<-list(c2018_agr$code_iris)
col2020<-list(c2020_agr$code_iris)
sqldf('SELECT code_iris FROM col2020 EXCEPT SELECT code_iris FROM col2018')
sqldf('select * from c2018_agr')
install.packages("e1071")
install.packages("e1071")
